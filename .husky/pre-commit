# GET VERSION FROM STAGED package.json (not working dir)
CURRENT_VERSION=$(git show :package.json | node -e "let input=''; process.stdin.on('data', c => input += c).on('end', () => process.stdout.write(JSON.parse(input).version));")

# GET VERSION FROM MAIN BRANCH
git fetch origin main --depth=1
MAIN_VERSION=$(git show origin/main:package.json | node -e "let input=''; process.stdin.on('data', c => input += c).on('end', () => process.stdout.write(JSON.parse(input).version));")

# CHECK IF VERSION IS BUMPED
if [ "$(printf '%s\n' "$MAIN_VERSION" "$CURRENT_VERSION" | sort -V | head -n1)" = "$CURRENT_VERSION" ]; then
  echo "❌ package.json version ($CURRENT_VERSION) is not greater than main ($MAIN_VERSION)!"
  echo "Please bump the version before committing."
  exit 1
else
  echo "✅ Version is bumped ($CURRENT_VERSION vs $MAIN_VERSION). Proceeding with commit."
fi

# CHECK FOR .env FILES
if git diff --cached --name-only | grep -E '^\.env($|[^a-zA-Z])' | grep -v '^\.env\.sample$'; then
  echo "❌ .env file(s) detected in commit! Please remove them before committing."
  exit 1
else
  echo "✅ No .env files detected. Proceeding with commit."
fi

# RUN LINTING
# npm run lint

# RUN UNIT TESTS
npm test -- --passWithNoTests